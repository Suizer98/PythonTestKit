name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Check for changes
      id: changes
      uses: dorny/paths-filter@v2
      with:
        filters: |
          docker:
            - 'Dockerfile'
            - 'Dockerfile.test'
            - 'requirements.txt'
            - 'requirements-test.txt'
            - 'pyproject.toml'
          python:
            - 'src/**'
            - 'tests/**'
            - '*.py'
            
    - name: Build and push main Docker image
      if: steps.changes.outputs.docker == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/suizer98/python-test-kit:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        labels: |
          org.opencontainers.image.title=Python Test Kit
          org.opencontainers.image.description=A comprehensive Python testing toolkit
          org.opencontainers.image.url=https://github.com/suizer98/PythonTestKit
        
    - name: Build and push test Docker image
      if: steps.changes.outputs.docker == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.test
        push: true
        tags: ghcr.io/suizer98/python-test-kit-test:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Pull images
      run: |
        docker pull ghcr.io/suizer98/python-test-kit:latest || echo "Main image not found, will build"
        docker pull ghcr.io/suizer98/python-test-kit-test:latest || echo "Test image not found, will build"
        
    - name: Run complete test suite
      run: |
        docker compose --profile test up --build test
        docker compose --profile test run test
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        
    # - name: Run individual tool tests
    #   run: |
    #     echo "Testing Black (Code Formatting)"
    #     docker compose run --rm test black check .
        
    #     echo "Testing Ruff (Linting & Import Sorting)"
    #     docker compose run --rm test ruff check .
        
    #     echo "Testing Bandit (Security Analysis)"
    #     docker compose run --rm test bandit -r .
        
    #     echo "Testing Safety (Dependency Vulnerabilities)"
    #     docker compose run --rm test safety check
        
    #     echo "Testing Semgrep (Static Analysis & Supply Chain)"
    #     docker compose run --rm test bash -c "git config --global --add safe.directory /usr/src/app && semgrep ci --dry-run"
        
    #     echo "Testing Pytest (Unit Tests)"
    #     docker compose run --rm test pytest tests/
        
    # - name: Upload test results
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: test-results
    #     path: |
    #       .coverage
    #       htmlcov/
    #       pytest-report.html
